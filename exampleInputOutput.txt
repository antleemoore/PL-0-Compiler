Input:
    var x, y;
    procedure B;
        var z, y, w;
        begin
            y := 1;
            z := 2;
            write w;
            if x > y then
                write z
            else
                write x * y;
        end;
    procedure A;
        var w, x;
        begin
            x := 3;
            w := x + y;
            write w;
            call B;
        end;
    begin
        x := 7;
        y := 10;
        call A
    end.

Output:
    No errors, program is syntactically correct.

    Line	OP	L	M
    0		JMP	0	32
    1		JMP	0	3
    2		JMP	0	22
    3		INC	0	7
    4		LIT	0	1
    5		STO	0	5
    6		LIT	0	2
    7		STO	0	4
    8		LOD	0	6
    9		SIO	0	1
    10		LOD	1	4
    11		LOD	0	5
    12		OPR	0	12
    13		JPC	0	17
    14		LOD	0	4
    15		SIO	0	1
    16		JMP	1	21
    17		LOD	1	4
    18		LOD	0	5
    19		OPR	0	4
    20		SIO	0	1
    21		OPR	0	0
    22		INC	0	6
    23		LIT	0	3
    24		STO	0	5
    25		LOD	0	5
    26		LOD	1	5
    27		STO	0	4
    28		LOD	0	4
    29		SIO	0	1
    30		CAL	2	3
    31		OPR	0	0
    32		INC	0	6
    33		LIT	0	7
    34		STO	0	4
    35		LIT	0	10
    36		STO	0	5
    37		CAL	0	22
    38		SIO	0	3

                    PC	BP	SP	 Stack
    Initial Values	0	999	1000
    0 JMP 0 32		32	999	1000	 
    32 INC 0 6		33	999	994	 0 0 0 0 0 0 
    33 LIT 0 7		34	999	993	 | 0 0 0 0 0 0 7 
    34 STO 0 4		35	999	994	 | 0 0 0 0 7 0 
    35 LIT 0 10		36	999	993	 | 0 0 0 0 7 0 10 
    36 STO 0 5		37	999	994	 | 0 0 0 0 7 10 
    37 CAL 0 22		22	993	994	 0 0 0 0 7 10 
    22 INC 0 6		23	993	988	 0 0 0 0 7 10 | 0 999 999 38 0 0 
    23 LIT 0 3		24	993	987	 0 0 0 0 7 10 | 0 999 999 38 0 0 3 
    24 STO 0 5		25	993	988	 0 0 0 0 7 10 | 0 999 999 38 0 3 
    25 LOD 0 5		26	993	987	 0 0 0 0 7 10 | 0 999 999 38 0 3 3 
    26 LOD 1 5		27	993	986	 0 0 0 0 7 10 | 0 999 999 38 0 3 3 10 
    27 STO 0 4		28	993	987	 0 0 0 0 7 10 | 0 999 999 38 10 3 3 
    28 LOD 0 4		29	993	986	 0 0 0 0 7 10 | 0 999 999 38 10 3 3 10 
    10
    29 SIO 0 1		30	993	987	 0 0 0 0 7 10 | 0 999 999 38 10 3 3 
    30 CAL 2 3		3	986	987	 0 0 0 0 7 10 0 999 999 38 10 3 3 
    3 INC 0 7		4	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 0 0 0 
    4 LIT 0 1		5	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 0 0 0 1 
    5 STO 0 5		6	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 0 1 0 
    6 LIT 0 2		7	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 0 1 0 2 
    7 STO 0 4		8	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 
    8 LOD 0 6		9	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 
    0
    9 SIO 0 1		10	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 
    10 LOD 1 4		11	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 
    11 LOD 0 5		12	986	978	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 1 
    12 OPR 0 12		13	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 
    13 JPC 0 17		17	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 
    17 LOD 1 4		18	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 
    18 LOD 0 5		19	986	978	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 1 
    19 OPR 0 4		20	986	979	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 0 
    0
    20 SIO 0 1		21	986	980	 0 0 0 0 7 10 0 999 999 38 10 3 3 | 0 0 993 31 2 1 0 
    21 OPR 0 0		31	993	987	 0 0 0 0 7 10 | 0 999 999 38 10 3 3 
    31 OPR 0 0		38	999	994	 0 0 0 0 7 10 
    38 SIO 0 3		39	999	994	 | 0 0 0 0 7 10 
